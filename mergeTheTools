  Consider the following: 
  > A string, s, of length n where s = c0c1...cn-1
  > An integer, k, where k is a factor of n.
    
    
  We can split s into n/k substrings where each substring, ti, consists of a contiguous block of k characters in s. then, use each ti to create string ui such that:
  > The characgers in ui are a subsequenxe of the characters in ti.
  > any repeat occurence of a character is removed from the string such that each character in ui occurs exactly once. in other words, if the character at some index j in ti occurs at a previous index< j in ti, then do not include the chatacter in string ui.
    
  Given s and k, print n/k lines where each line i denotes string ui.
    
  example:
  s = 'AAABCADDE'
  k = 3
    
There are three substrings of lenght 3 to consider: 'AAA','BCA' and 'DDE'. the first substrig is all 'A' characters, so u1 ='A'. the second substring has all distinct charactes, so u2 ='BCA'. the third substring has 2 different characters, so u3='DE'. Note that s subsequence maintains the original order of chatacters encountered. the order of characters in each subsequence shown is important.

Function desription:
>compelte the merge_the_tools functions in the editor below.
>merge_the_tools has the followinf parameters:
 > string s: the string to analyse
 > int k: the size go substrings to analyse
 
print
 print each subsequence on a new line. there will be n/k of them. no return value is expected.
 
input format
 >the first line contains a single string s.
 >the seconf line contains an integer, k, the length of each substring.
 
constratins:
 1<=n<=10^4, where n is the lenght of s
 1<=k<=n
 it is guaranteed that n is a multiple of k
 
sample input
 
 STDIN       Function
-----       --------
AABCAAADA   s = 'AABCAAADA'
3           k = 3
Sample Output

AB
CA
AD


solution:

def merge_the_tools(string, k):
    for i in range(0, len(string), k):
        s = ""
        for j in string[i : i + k]:
            if j in s:
                continue
            else:
                s += j          
        print(s)
