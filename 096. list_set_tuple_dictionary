Python Collections (Arrays)
There are four collection data types in the Python programming language:

List is a collection which is ordered and changeable. Allows duplicate members. []
Tuple is a collection which is ordered and unchangeable. Allows duplicate members. ()
Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members. {}
Dictionary is a collection which is ordered** and changeable. No duplicate members. {}

DICTIONARY

car = {
"brand": "Ford",
"model": "Mustang",
"year": 1964
}

x = car.keys()

print(x) #before the change, dict_keys(['brand', 'model', 'year'])

car["color"] = "white"

print(x) #after the change, dict_keys(['brand', 'model', 'year', 'color'])




# Dictionary example
person = {'name': 'Alice', 'age': 30, 'city': 'New York'}

# Using get() to retrieve values
name = person.get('name')
print(name)  # Output: 'Alice'

age = person.get('age')
print(age)   # Output: 30

# Trying to retrieve a key that doesn't exist
country = person.get('country')
print(country)  # Output: None

# Providing a default value
country = person.get('country', 'USA')
print(country)  # Output: 'USA'

another example:

  game_counts[game_id] = {
            "num_copies": 0,
            "available": 0,
            "not_available": 0
        }
this code holds the value like this:

game_counts = {
    248: {
        "num_copies": 5,
        "available": 4,
        "not_available": 1
    },
    249: {
        "num_copies": 5,
        "available": 5,
        "not_available": 0
    }
}

game_copies = [
    {"game_id": 248, "copy_id": 1, "availability_status": "Not Available"},
    {"game_id": 248, "copy_id": 2, "availability_status": "Available"},
    {"game_id": 248, "copy_id": 3, "availability_status": "Available"},
    {"game_id": 248, "copy_id": 4, "availability_status": "Available"},
    {"game_id": 248, "copy_id": 5, "availability_status": "Available"},
    {"game_id": 249, "copy_id": 1, "availability_status": "Available"},
    {"game_id": 249, "copy_id": 2, "availability_status": "Available"},
    {"game_id": 249, "copy_id": 3, "availability_status": "Available"},
    {"game_id": 249, "copy_id": 4, "availability_status": "Available"},
    {"game_id": 249, "copy_id": 5, "availability_status": "Available"},
]

-------------------
# Dictionary to store counts
game_counts = {}

# Iterate over game_copies and count copies and availability statuses
for entry in game_copies:
    game_id = entry["game_id"]
    availability = entry["availability_status"]
    
    if game_id not in game_counts:
        game_counts[game_id] = {
            "num_copies": 0,
            "available": 0,
            "not_available": 0
        }
    
    game_counts[game_id]["num_copies"] += 1
    
    if availability == "Available":
        game_counts[game_id]["available"] += 1
    elif availability == "Not Available":
        game_counts[game_id]["not_available"] += 1

for game_id, counts in game_counts.items():
    print(f"Game ID: {game_id}, Num Copies: {counts['num_copies']}, Available: {counts['available']}, Not Available: {counts['not_available']}")
--------------------------

Game ID: 248, Num Copies: 5, Available: 4, Not Available: 1
Game ID: 249, Num Copies: 5, Available: 5, Not Available: 0

sets work?

Sets are used to store multiple items in a single variable.

Set is one of 4 built-in data types in Python used to store collections of data, the other 3 are List, Tuple, and Dictionary,
all with different qualities and usage.

A set is a collection which is unordered, unchangeable*, and unindexed.

eg: False and 0 is considered the same value:

thisset = {"apple", "banana", "cherry", False, True, 0}

print(thisset)

tuple?

Tuples are used to store multiple items in a single variable.

Tuple is one of 4 built-in data types in Python used to store collections of data, the other 3 are List, Set, and Dictionary, all with different qualities and usage.

A tuple is a collection which is ordered and unchangeable.

Tuples are written with round brackets.
eg: 
thistuple = ("apple", "banana", "cherry", "apple", "cherry")
print(thistuple)


list? 
Lists are used to store multiple items in a single variable.

Lists are one of 4 built-in data types in Python used to store collections of data,
the other 3 are Tuple, Set, and Dictionary, all with different qualities and usage.

Lists are created using square brackets:

Example
Create a List:

thislist = ["apple", "banana", "cherry"]
print(thislist)


